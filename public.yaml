openapi: 3.0.0
info:
  title: Track Public Api
  version: 1.0.1
  contact:
    name: Styx Studio
    email: mail@styx.studio
  description: ''
servers:
  - description: local
    url: 'http://localhost:8081'
paths:
  /spaces:
    get:
      summary: List spaces
      tags:
        - spaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceListResponse'
      operationId: get-spaces
      description: ''
      parameters: []
      x-spring-paginated: true
    parameters: []
    post:
      summary: Create a space
      operationId: post-spaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpaceCreateRequest'
      tags:
        - spaces
  '/spaces/{space}':
    parameters:
      - schema:
          type: string
        name: space
        in: path
        required: true
    get:
      summary: Get a space
      tags:
        - spaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
      operationId: get-spaces-id
    delete:
      summary: Remove a project
      operationId: delete-spaces-space
      responses:
        '200':
          description: OK
      tags:
        - spaces
    patch:
      summary: Update a space
      operationId: patch-spaces-space
      responses:
        '200':
          description: OK
      tags:
        - spaces
  /money/expenses:
    get:
      summary: List expenses
      tags:
        - money
      operationId: get-money-expenses
      description: ''
      parameters:
        - name: search
          in: query
          description: 'The search parameters for filtering, pagination, and sorting'
          required: false
          schema:
            $ref: '#/components/schemas/Search'
      x-spring-paginated: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseListResponse'
    parameters: []
    post:
      summary: Create a space
      operationId: post-money-expenses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCreateRequest'
      tags:
        - money
    delete:
      summary: Delete expenses
      operationId: delete-money-expenses
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      tags:
        - money
  '/money/expenses/{expense}':
    parameters:
      - schema:
          type: string
        name: expense
        in: path
        required: true
    get:
      summary: Get an expense
      tags:
        - money
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
      operationId: get-money-expenses-expense
    delete:
      summary: Remove an expense
      operationId: delete-money-expenses-expense
      responses:
        '200':
          description: OK
      tags:
        - money
    patch:
      summary: Update an expense
      operationId: patch-money-expenses-expense
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
      tags:
        - money
  /users:
    get:
      summary: List users
      tags:
        - users
      operationId: get-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
    post:
      summary: ''
      operationId: post-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      tags:
        - users
  '/users/{user}':
    parameters:
      - schema:
          type: string
        name: user
        in: path
        required: true
    get:
      summary: Get a user
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      operationId: get-users-id
    patch:
      summary: Update a space
      operationId: patch-users-user
      responses:
        '200':
          description: OK
      tags:
        - users
  '/spaces/{space}/users':
    parameters:
      - schema:
          type: string
        name: space
        in: path
        required: true
    get:
      summary: List space users
      operationId: get-spaces-id-users
      responses:
        '200':
          description: OK
      tags:
        - spaces
  '/spaces/{space}/users/{user}':
    parameters:
      - schema:
          type: string
        name: space
        in: path
        required: true
      - schema:
          type: string
        name: user
        in: path
        required: true
    put:
      summary: Add a space user
      operationId: put-spaces-id-users-id
      responses:
        '200':
          description: OK
      description: ''
      tags:
        - spaces
    delete:
      summary: Remove a space collaborator
      operationId: delete-spaces-id-users-id
      responses:
        '200':
          description: OK
      tags:
        - spaces
  /categories:
    get:
      summary: List categories
      tags:
        - categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'
      operationId: get-categories
      x-spring-paginated: true
    post:
      summary: Create a category
      operationId: post-categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
      tags:
        - categories
  '/categories/{category}':
    parameters:
      - schema:
          type: string
        name: category
        in: path
        required: true
    get:
      summary: Retrieve a category
      tags:
        - categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      operationId: get-categories-category
    patch:
      summary: Update a category
      operationId: patch-categories-category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      tags:
        - categories
components:
  schemas:
    Filters:
      type: object
      properties:
        query:
          type: string
        categories:
          type: array
          items:
            type: string
    Search:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/Filters'
        page:
          type: integer
        rowsPerPage:
          type: integer
        sortBy:
          type: string
        sortDir:
          type: string
          enum:
            - asc
            - desc
    Money:
      title: Money
      type: object
      properties:
        currency:
          type: string
        value:
          type: number
        display_text:
          type: string
          readOnly: true
    Location:
      title: Location
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number
    AuditModel:
      title: AuditModel
      type: object
      properties:
        created_at:
          type: string
        updated_at:
          type: string
        created_by:
          type: string
      required:
        - created_at
        - updated_at
        - created_by
    ResourceModel:
      title: ResourceModel
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    ListModel:
      title: ListModel
      type: object
      properties:
        size:
          type: string
        has_more:
          type: boolean
        total:
          type: string
      required:
        - size
        - has_more
        - total
    Space:
      title: Space
      allOf:
        - type: object
        - $ref: '#/components/schemas/AuditModel'
        - $ref: '#/components/schemas/ResourceModel'
        - $ref: '#/components/schemas/SpaceCreateRequest'
      description: ''
    SpaceCreateRequest:
      title: SpaceCreateRequest
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    SpaceListResponse:
      allOf:
        - $ref: '#/components/schemas/ListModel'
        - type: object
          properties:
            list:
              type: array
              items:
                $ref: '#/components/schemas/Space'
          required:
            - list
    User:
      title: User
      x-tags:
        - users
      allOf:
        - $ref: '#/components/schemas/AuditModel'
        - $ref: '#/components/schemas/ResourceModel'
        - type: object
          properties:
            verified:
              type: boolean
            blocked:
              type: boolean
        - $ref: '#/components/schemas/UserCreateRequest'
    UserCreateRequest:
      title: UserCreateRequest
      type: object
      properties:
        name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        middle_name:
          type: string
        image:
          type: string
        email:
          type: string
        sub:
          type: string
    UserListResponse:
      allOf:
        - $ref: '#/components/schemas/ListModel'
        - type: object
          properties:
            list:
              type: array
              items:
                $ref: '#/components/schemas/User'
          required:
            - list
    Expense:
      allOf:
        - $ref: '#/components/schemas/AuditModel'
        - $ref: '#/components/schemas/ResourceModel'
        - type: object
          properties:
            verified:
              type: boolean
            blocked:
              type: boolean
        - $ref: '#/components/schemas/ExpenseCreateRequest'
    ExpenseCreateRequest:
      title: ExpenseCreateRequest
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Money'
        name:
          type: string
        category_id:
          type: string
        currency_code:
          type: string
        description:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        payment_source_id:
          type: string
      required:
        - amount
    ExpenseListResponse:
      allOf:
        - $ref: '#/components/schemas/ListModel'
        - type: object
          properties:
            list:
              type: array
              items:
                $ref: '#/components/schemas/Expense'
          required:
            - list
    Category:
      allOf:
        - $ref: '#/components/schemas/AuditModel'
        - $ref: '#/components/schemas/ResourceModel'
        - $ref: '#/components/schemas/CategoryCreateRequest'
    CategoryCreateRequest:
      title: CategoryCreateRequest
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        avatar:
          type: string
    CategoryListResponse:
      allOf:
        - $ref: '#/components/schemas/ListModel'
        - type: object
          properties:
            list:
              type: array
              items:
                $ref: '#/components/schemas/Category'
          required:
            - list
  parameters: {}
  securitySchemes:
    token:
      type: http
      scheme: bearer
tags:
  - name: categories
  - name: money
  - name: spaces
  - name: users
security:
  - token: []
